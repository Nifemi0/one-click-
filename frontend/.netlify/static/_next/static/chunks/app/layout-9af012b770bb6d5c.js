(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{347:()=>{},1148:(e,t,n)=>{"use strict";n.d(t,{WalletProvider:()=>o,v:()=>s});var l=n(5155),r=n(2115);let a=(0,r.createContext)(void 0);function s(){let e=(0,r.useContext)(a);if(void 0===e)throw Error("useWallet must be used within a WalletProvider");return e}function o(e){let{children:t}=e,[n,s]=(0,r.useState)(!1),[o,i]=(0,r.useState)(null),[u,c]=(0,r.useState)(null),h=async()=>{try{if(void 0!==window.ethereum){let e=await window.ethereum.request({method:"eth_requestAccounts"});if(e.length>0){i(e[0]),s(!0);let t=await window.ethereum.request({method:"eth_chainId"});c(parseInt(t,16)),window.ethereum.on("accountsChanged",e=>{0===e.length?d():i(e[0])}),window.ethereum.on("chainChanged",e=>{c(parseInt(e,16))})}}else alert("Please install MetaMask to use this app!")}catch(e){console.error("Error connecting wallet:",e),alert("Failed to connect wallet. Please try again.")}},d=()=>{s(!1),i(null),c(null)};return(0,l.jsx)(a.Provider,{value:{isConnected:n,address:o,chainId:u,connect:h,disconnect:d},children:t})}},5356:e=>{e.exports={style:{fontFamily:"'Inter', 'Inter Fallback'",fontStyle:"normal"},className:"__className_e8ce0c"}},5397:(e,t,n)=>{Promise.resolve().then(n.t.bind(n,5356,23)),Promise.resolve().then(n.t.bind(n,347,23)),Promise.resolve().then(n.bind(n,1148))}},e=>{e.O(0,[444,441,964,358],()=>e(e.s=5397)),_N_E=e.O()}]);